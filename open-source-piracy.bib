  @misc{
    rms,
    title={A Free Digital Society - What Makes Digital Inclusion Good or Bad?},
    url={http://www.gnu.org/philosophy/free-digital-society.en.html},
    author={Richard M. Stallman},
    year={2011},
    month={October},
    day={19},
    type={Lecture transcript},
    annotate={
      This transcript was recorded from a lecture that Richard Stallman delivered at
      Sciences Po in Paris on October 19, 2011. Throughout his lecture, Stallman cautions his
      listeners about the dangers of what he refers to as "digital inclusion." He stresses the need
      for digital consumers to have complete freedom over their interactions with computers
      and software; he claims that people should ultimately be removed from a digital society
      that encroaches on that freedom. To support his claim, Stallman elucidates the following
      the threats to digital freedom: surveillance, censorship, restricted data formats, and the
      use of Internet services. Stallman maintains that the widespread adoption of "free
      software" will successfully combat these threats.\\
      As the founder of the GNU project, Stallman is a major proponent of free
      software. Stallman draws from a wide range of subjects to support his claim, only
      occasionally citing specific details. Stallman is forthcoming in stating that this lecture is a
      reflection of his personal views; consequently, Stallman's presentation of open source
      software has a bias towards its ethical considerations. Stallman's primary objective is to
      encourage his listeners to support open source software for the sake of individual
      freedom rather than for the sake of its practical advantages. Stallman's lecture presents a
      single view on the controversies surrounding open source software. In our paper, we will
      address Stallman's stance on intellectual property as it relates licensing and piracy. We
      will also explore the opposing argument by analyzing the effects of implementing open
      source software.
    }
  }
  @article{caulkins,
    title={When to make proprietary software open source},
    volume={37},
    number={6},
    journal={Journal of Economic Dynamics and Control},
    author={Caulkins, Jonathan P. and Feichtinger, Gustav and Grass, Dieter and Hartl, Richard F. and Kort, Peter M. and Seidl, Andrea},
    year={2013},
    month={Jun},
    pages={1182-1194},
    doi={10.1016/j.jedc.2013.02.009},
    annotate={
      This article describes how the open source community helps entrepreneurs collaborate and build businesses.  Even though open source software can be obtained for free, there are still ways to make a profit off it. With an environment of sharing, entrepreneurs can build off one another's ideas and specialize in what they're good at doing.\\
      This article will be used in the paper to show the economic viability of developing open source software.  The conclusions of the article will be used to support our argument with factual information.
    }
  }
  @article{powell,
    title={Democratizing production through open source knowledge: from open software to open hardware},
    volume={34},
    number={6},
    journal={Media, Culture \& Society},
    author={Powell, A.},
    year={2012},
    month={Sep},
    pages={691-708},
    doi={10.1177/0163443712449497},
    annotate={
      This article details when a firm should, if ever, release its source code. The authors found that it is advisable to pick one model, proprietary or open-source, from the beginning, and stick to it. The cost of changing the infrastructure is often too high to switch from closed-source to open-source and vice versa. Specifically in the case of switching from open-source to closed-source, the switch is also likely to upset the user base of a firm's software.
    }
  }
  @article{yetis,
    title={Networked Entrepreneurs: How Entrepreneurs Leverage Open Source Software Communities},
    volume={59},
    number={4},
    journal={American Behavioral Scientist},
    author={Yetis-Larsson, Z. and Teigland, R. and Dovbysh, O.},
    year={2014},
    pages={475-491},
    doi={10.1177/0002764214556809},
    annotate={
    }
  }
  @article{bisson,
    title={What Makes Open Source Work?},
    volume={43},
    number={3},
    journal={Library Technology Reports},
    author={Casey Bisson},
    year={2007},
    annotate={
      This journal article, written by Casey Bisson, explores the success of Linux and other
      open source software. Bisson gives a broad overview of what causes open source software
      development, describing how it arises to meet a need and how a community takes shape behind
      it. Bisson claims that the success of open source software is due to its flexibility,
      parallelism, and passion. To support his claims, Bisson breaks down the success of
      Linux and the Apache Web server.\\
      Bisson's article was published in the \textit{Library Technology Reports} academic journal in the
      summer of 2007. As the title of the journal would suggest, Bisson's work makes more of a report
      and less of an academic claim; his work is not nearly as thorough and developed as some of our
      other sources. This article is approaching its ninth year since its publications, but that
      does not make its content any less relevant. Bisson's work is useful because it attributes
      the success of Linux and other open source software as belonging to a larger movement.
      In our paper, we will discuss the ways in which this movement has impacted the software
      community.
    }
  }
  @article{wang,
    title={Revisiting {Linus's} law: Benefits and challenges of open source software peer review},
    doi={10.1016/j.ijhcs.2015.01.005},
    volume={77},
    journal={International Journal of Human-Computer Studies},
    author={Wang, Jing and Shih, Patrick C. and Carroll, John M.},
    year={2015},
    pages={52-65},
    annotate={
      This peer-reviewed article appeared in a recent publication of the \textit{International
      Journal of Human-Computer Studies}. In this article, Wang, Shih, and Carroll revisit the
      challenges associated with open source software development, specifically regarding the
      process of peer review. Wang et al. conducted a case study on the bug reports from Mozilla
      Firefox, concluding that the diversity of participants involved in development produced
      challenges and benefits.  They claim that diverse groups of people tend to enhance
      experienced-based learning, yet this learning often caused frustration in those with more
      technical experience.\\
      The work of Wang et al. builds off of existing research while taking a different approach.
      Their findings, which are based on current, relevant data, are organized and well documented.
      This article presents a unique perspective on OSS (open source software) peer review. As most
      studies of OSS development focus on the bug tracking system, the authors instead explored the
      interactions of people involved with its development. This article provides insight on the
      ways in which the interactions of development communities contribute to open source software,
      which is
      a topic that our paper will address.
    }
  }
  @misc{zemlin,
    title={What the Tech Industry Has Learned from {Linus Torvalds}},
    author={Jim Zemlin},
    year={2013},
    url={https://www.youtube.com/watch?v=7XTHdcmjenI},
    type={Video file},
    annotate={
      The information in this source was presented by Jim Zemlin at a TEDx event at
      Concordia University. Zemlin elucidates the technical achievements of Linus Torvalds, the
      creator and principle developer of the Linux kernel. Zemlin follows the development of Linux
      from its humble conception all the way to its current deployment on a vast array of computer
      systems. Zemlin claims that the success of open source software, particularly the success of
      Linux, is due to ease of sharing and collaborative effort that is associated with open source
      software. Zemlin cites how innovation in the software community is closely linked with the
      development and use of open source software. To further strengthen his argument, Zemlin
      compares the success of different businesses that utilize open source software to varying
      degrees.\\
      Jim Zemlin is the executive director of the Linux foundation, an organization
      dedicated to the advancement of collaborative software. As opposed to Richard Stallman,
      Zemlin's talk emphasizes the practicality of open source rather than the ethical
      considerations of free software and open source. In sharing the success story of
      Linus Torvalds and Linux, Zemlin attributes the success of the open source software movement
      with the values of his organization.  Although the tone of his presentation is not strictly
      academic, Zemlin shares further insight into the communities of open source developers.
      Our paper will use the combined viewpoints of Zemlin and Stallman to gain a better
      understanding of how open source software affects all aspects of society.
    }
  }
  @article{pankaja,
    title={Proprietary Software versus Open Source Software for Education},
    volume={2},
    number={7},
    journal={American Journal of Engineering Research},
    author={Pankaja, N. and Raj, Mukund},
    year={2013},
    pages={124-130},
    annotate={
      This paper discusses different software models, and their usage in higher
      education. Because people often confuse these models, the author provides
      definitions for these: freeware, open-source software, proprietary software,
      shareware, and others.\\
      While the paper touches on all of these models, the author primarily notes the
      differences between open-source and proprietary software. He compares them
      with the following categories: cost, service and support, innovation, security,
      usability, standards, availability, transparency, and reliability.\\
      The author clearly favors open-source software, with many sections devoted
      entirely to open-source software and its advantages, and only eight sections
      focused entirely on proprietary software.
    }
  }
  @article{clarke,
    title={Is Open Source Software More Secure?},
    author={Clarke, R and Dorwin, D and Nash, R},
    annotate={
      The paper discusses the different trains of thought for using open-source and
      proprietary software for more secure code. The authors explain that proponents
      of open-source claim that exposing the source code to the public gives more
      opportunity for security bugs to be exposed, in addition to ones found by the
      main development team.\\
      They explain that proponents of closed source rely on obscurity to protect
      their code. They believe that not giving the public access to their code will
      make it difficult to find security holes before they do.\\
      The authors also explain that not all security holes come directly from source
      code. They also mention that sometimes a security hole in an open-source
      software can inspire hackers to try something similar in a closed-source
      software.
    }
  }
  @misc{pahlka,
    title={Coding a Better Government},
    author={Pahlka, Jennifer},
    year={2012},
    month={Feb},
    type={Video file},
    url={https://www.ted.com/talks/jennifer_pahlka_coding_a_better_government},
    annotate={
      In this talk, Jennifer Pahlka, founder of "Code for America," discusses a change to open-source technology for governments. She brings up the idea of making the government operate more like the internet--engaging citizens directly through innovative apps that help build a sense of community.\\
      She spoke of an app that allows users in Boston to "adopt a fire hydrant," and volunteer to shovel snow off of it in case it needs to be used. This idea of making the government more open and accessible, she believes, will make for easier adoption of new technologies that will help the government to run more smoothly, and hopefully eliminate some of the red tape that's needed to get things done.
    }
  }
  @article{pyka,
    doi={10.1016/j.jsis.2009.10.001},
    title={Alleviating piracy through open source strategy: An exploratory study of business software firms in China},
    volume={18},
    number={4},
    journal={The Journal of Strategic Information Systems},
    author={Pyk\"{a}l\"{a}inen, T. and Yang, D. and Fang, T.},
    year={2009},
    pages={165-177},
    annotate={
      The article looks at software firms in China, where software piracy rates is over 90\%, and explores distributing open source software rather than sticking to the traditional proprietary ones. The general public in China has a limited purchasing platform, making it hard for software firms to build up a loyal fan base such as Apple's. As a result, the general public turns to free software or pirated software; even if the software is lacking, at least they didn't have to pay. The article conducts real life experiments and reports its findings.\\
      Using the article, the team gains concrete results in using open source software to combat software piracy. While the software firms disagree on whether open source strategy is the way to battle piracy, it is the most effective one currently. Findings also show how different sized firms vary in suitability adapting open source strategy. The article can be used to realistically support the thesis and provide evidence that open source software prevent privacy.
    }
  }
  @article{andres,
    doi={10.1007/s10551-013-1620-7},
    title={Fighting Software Piracy: Which Governance Tools Matter in Africa?},
    volume={118},
    number={3},
    journal={Journal of Business Ethics},
    author={Andr\'{e}s, Antonio R. and Asongu, Simplice A.},
    year={2013},
    pages={667-682},
    annotate={
      Andres and Asongu explore the problem of software piracy in Africa, which is double the global rate. They discuss factors that contribute to software piracy, mainly focusing on the African government's role. Furthering this point, they suggest potential steps the government can take to decrease software piracy and enforce intellectual property rights.\\
      The team intend to use this article to further explore the issue of piracy before diving into how open source enable or prevent piracy. By looking into government involvements in attempting to stop piracy, the team can explore how open source software can play into their strategies. As it is, open source software forfeits intellectual property rights up to a certain degrees, which can eliminate some concerns of the government in upholding IPR.
    }
  }
  @article{mark, title={Open Sourcing Can Tackle Software Piracy [opinion]},
    journal={Africa News Service},
    author={Mark, Okuttah},
    year={2008},
    month={Mar},
    day={31},
    annotate={
      Article gives useful insight in the piracy situation and how open source software is being supported by developing governments as a potential solution. Traditional commercial products are expensive due to piracy, as companies raise prices to combat profit lost caused by privacy. In addition to privacy prevention, companies benefit from using open source software. Not only do companies save money when purchasing the software, they also get constant time improvements of the software developing company to adjust the software to suit their company system.\\
      The general public usually thinks that piracy is often caused by the overly expensive commercial products as normally people will opt for downloading the illegal free software rather than pay for something they don't need to. But piracy and high cost actually forms a vicious cycle as the more a company loses profit to piracy, the more they need to increase the cost of upcoming products. Open source software is a new way to neutralize this cycle as redistribution of the software is free and companies developing open source software gain profit through software support.
    }
  }
  @article{cosovanu,
    title={Open Source Software in Eastern Europe and Other Emerging Markets: The Moral Alternative to Piracy?},
    volume={9},
    journal={Journal of Internet Law},
    author={Cosovanu, Catalin},
    year={2006},
    month={Jan},
    annotate={
      As piracy mainly targets highly packaged products, especially those known to the general public. Thus, the average local developer gives a limited interest to privacy and copyright issues. For developing countries, the difficulty of moving into the global market limits their impact. To them, privacy is necessary for the distribution of softwares priced beyond easily affordable rates. As so, a potential solution for privacy lays in differentiating price tags, which is implemented in some software companies such as Microsoft. Open source can potentially be the center of the final solution, but the dominance of packaged products in the market make it difficult for a major switch to open source software.\\
      According to the article, in making definitive steps in using open source software to prevent privacy, many other issues still need to be addressed. This article is a good jumping point into formulating a realistic plan, which covers multiple facets, in supporting open source software used to combat piracy.
    }
  }
